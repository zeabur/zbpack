
[TestTemplate/7-codeigniter--0--none - 1]
FROM docker.io/library/php:7-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter--0--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter--0-aaa-none - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter--0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter--0-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter--0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter--1--none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter--1--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter--1-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter--1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter--1-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter--1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter-nginx-0--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx-0--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter-nginx-0-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter-nginx-0-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter-nginx-1--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx-1--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter-nginx-1-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter-nginx-1-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter-nginx_owo-0--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx_owo-0--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter-nginx_owo-0-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx_owo-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter-nginx_owo-0-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx_owo-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter-nginx_owo-1--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx_owo-1--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter-nginx_owo-1-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx_owo-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-codeigniter-nginx_owo-1-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx_owo-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--0-+os--none - 1]
FROM docker.io/library/php:7-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--0-+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--0-+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--0-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--0-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel--0-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--0--none - 1]
FROM docker.io/library/php:7-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--0--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--0-aaa+os--none - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--0-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--0-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--0-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--0-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel--0-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--0-aaa-none - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--0-aaa_bbb+os--none - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--0-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--0-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--0-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--0-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel--0-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--0-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--1-+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--1-+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--1-+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--1-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--1-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel--1-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--1--none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--1--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--1-aaa+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--1-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--1-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--1-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--1-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel--1-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--1-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--1-aaa_bbb+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--1-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--1-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--1-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--1-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel--1-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel--1-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel--1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-0-+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-0-+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-0-+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-0-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-0-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel-nginx-0-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-0--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-0--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-0-aaa+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-0-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-0-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-0-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-0-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel-nginx-0-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-0-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-0-aaa_bbb+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-0-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-0-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-0-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-0-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel-nginx-0-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-0-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-1-+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-1-+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-1-+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-1-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-1-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel-nginx-1-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-1--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-1--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-1-aaa+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-1-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-1-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-1-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-1-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel-nginx-1-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-1-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-1-aaa_bbb+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-1-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-1-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-1-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-1-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel-nginx-1-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx-1-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-0-+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-0-+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-0-+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-0-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-0-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel-nginx_owo-0-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-0--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-0--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-0-aaa+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-0-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-0-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-0-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-0-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel-nginx_owo-0-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-0-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-0-aaa_bbb+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-0-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-0-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-0-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-0-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel-nginx_owo-0-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-0-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-1-+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-1-+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-1-+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-1-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-1-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel-nginx_owo-1-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-1--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-1--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-1-aaa+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-1-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-1-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-1-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-1-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel-nginx_owo-1-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-1-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-1-aaa_bbb+os--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-1-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-1-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-1-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-1-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/7-laravel-nginx_owo-1-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php7
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-laravel-nginx_owo-1-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx_owo-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-none--0--none - 1]
FROM docker.io/library/php:7-fpm


COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none--0--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm


COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-none--0-aaa-none - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none--0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-none--0-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none--0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-none--1--none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none--1--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-none--1-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none--1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-none--1-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none--1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-none-nginx-0--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx-0--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-none-nginx-0-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-none-nginx-0-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-none-nginx-1--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx-1--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-none-nginx-1-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-none-nginx-1-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-none-nginx_owo-0--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx_owo-0--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-none-nginx_owo-0-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx_owo-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-none-nginx_owo-0-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx_owo-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-none-nginx_owo-1--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx_owo-1--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-none-nginx_owo-1-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx_owo-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-none-nginx_owo-1-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx_owo-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp--0--none - 1]
FROM docker.io/library/php:7-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp--0--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp--0-aaa-none - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp--0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp--0-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp--0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp--1--none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp--1--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp--1-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp--1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp--1-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp--1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp-nginx-0--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx-0--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp-nginx-0-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp-nginx-0-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp-nginx-1--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx-1--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp-nginx-1-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp-nginx-1-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp-nginx_owo-0--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx_owo-0--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp-nginx_owo-0-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx_owo-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp-nginx_owo-0-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx_owo-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp-nginx_owo-1--none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx_owo-1--php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp-nginx_owo-1-aaa-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx_owo-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/7-thinkphp-nginx_owo-1-aaa_bbb-none - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx_owo-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter--0--none - 1]
FROM docker.io/library/php:8.1-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter--0--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter--0-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter--0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter--0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter--0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter--1--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter--1--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter--1-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter--1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter--1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter--1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter-nginx-0--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter-nginx-0-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter-nginx-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter-nginx-1--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter-nginx-1-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter-nginx-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter-nginx_owo-0--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx_owo-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter-nginx_owo-0-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx_owo-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter-nginx_owo-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx_owo-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter-nginx_owo-1--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx_owo-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter-nginx_owo-1-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx_owo-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-codeigniter-nginx_owo-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx_owo-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--0-+os--none - 1]
FROM docker.io/library/php:8.1-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--0-+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--0-+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--0-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--0-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel--0-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--0--none - 1]
FROM docker.io/library/php:8.1-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--0--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--0-aaa+os--none - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--0-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--0-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--0-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--0-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel--0-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--0-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--0-aaa_bbb+os--none - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--0-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--0-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--0-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--0-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel--0-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--1-+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--1-+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--1-+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--1-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--1-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel--1-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--1--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--1--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--1-aaa+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--1-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--1-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--1-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--1-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel--1-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--1-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--1-aaa_bbb+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--1-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--1-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--1-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--1-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel--1-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel--1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel--1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-0-+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-0-+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-0-+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-0-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-0-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel-nginx-0-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-0--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-0-aaa+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-0-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-0-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-0-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-0-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel-nginx-0-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-0-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-0-aaa_bbb+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-0-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-0-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-0-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-0-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel-nginx-0-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-1-+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-1-+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-1-+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-1-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-1-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel-nginx-1-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-1--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-1-aaa+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-1-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-1-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-1-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-1-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel-nginx-1-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-1-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-1-aaa_bbb+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-1-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-1-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-1-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-1-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel-nginx-1-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-0-+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-0-+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-0-+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-0-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-0-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel-nginx_owo-0-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-0--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa_bbb+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-1-+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-1-+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-1-+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-1-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-1-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel-nginx_owo-1-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-1--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa_bbb+os--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.1
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx_owo-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none--0--none - 1]
FROM docker.io/library/php:8.1-fpm


COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none--0--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm


COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none--0-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none--0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none--0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none--0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none--1--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none--1--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none--1-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none--1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none--1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none--1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none-nginx-0--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none-nginx-0-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none-nginx-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none-nginx-1--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none-nginx-1-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none-nginx-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none-nginx_owo-0--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx_owo-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none-nginx_owo-0-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx_owo-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none-nginx_owo-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx_owo-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none-nginx_owo-1--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx_owo-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none-nginx_owo-1-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx_owo-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-none-nginx_owo-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx_owo-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp--0--none - 1]
FROM docker.io/library/php:8.1-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp--0--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp--0-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp--0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp--0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp--0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp--1--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp--1--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp--1-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp--1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp--1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp--1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp-nginx-0--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp-nginx-0-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp-nginx-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp-nginx-1--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp-nginx-1-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp-nginx-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp-nginx_owo-0--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx_owo-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp-nginx_owo-0-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx_owo-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp-nginx_owo-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx_owo-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp-nginx_owo-1--none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx_owo-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp-nginx_owo-1-aaa-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx_owo-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.1-thinkphp-nginx_owo-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx_owo-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.1-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter--0--none - 1]
FROM docker.io/library/php:8.2-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter--0--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter--0-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter--0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter--0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter--0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter--1--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter--1--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter--1-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter--1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter--1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter--1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter-nginx-0--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter-nginx-0-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter-nginx-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter-nginx-1--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter-nginx-1-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter-nginx-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter-nginx_owo-0--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx_owo-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter-nginx_owo-0-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx_owo-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter-nginx_owo-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx_owo-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter-nginx_owo-1--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx_owo-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter-nginx_owo-1-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx_owo-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-codeigniter-nginx_owo-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx_owo-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--0-+os--none - 1]
FROM docker.io/library/php:8.2-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--0-+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--0-+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--0-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--0-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel--0-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--0--none - 1]
FROM docker.io/library/php:8.2-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--0--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--0-aaa+os--none - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--0-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--0-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--0-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--0-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel--0-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--0-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--0-aaa_bbb+os--none - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--0-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--0-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--0-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--0-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel--0-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--1-+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--1-+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--1-+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--1-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--1-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel--1-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--1--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--1--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--1-aaa+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--1-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--1-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--1-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--1-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel--1-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--1-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--1-aaa_bbb+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--1-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--1-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--1-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--1-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel--1-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel--1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel--1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-0-+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-0-+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-0-+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-0-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-0-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel-nginx-0-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-0--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-0-aaa+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-0-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-0-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-0-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-0-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel-nginx-0-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-0-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-0-aaa_bbb+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-0-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-0-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-0-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-0-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel-nginx-0-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-1-+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-1-+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-1-+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-1-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-1-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel-nginx-1-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-1--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-1-aaa+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-1-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-1-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-1-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-1-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel-nginx-1-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-1-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-1-aaa_bbb+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-1-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-1-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-1-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-1-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel-nginx-1-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-0-+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-0-+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-0-+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-0-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-0-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel-nginx_owo-0-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-0--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa_bbb+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-1-+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-1-+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-1-+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-1-+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-1-+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel-nginx_owo-1-+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-1--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa_bbb+os--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa_bbb+os--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa_bbb+os-roadrunner-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa_bbb+os-roadrunner-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa_bbb+os-swoole-none - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan octane:start --server=swoole --host=0.0.0.0 --port=8080

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa_bbb+os-swoole-php_artisan_serve - 1]
FROM docker.io/phpswoole/swoole:php8.2
RUN docker-php-ext-install pcntl

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx_owo-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none--0--none - 1]
FROM docker.io/library/php:8.2-fpm


COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none--0--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm


COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none--0-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none--0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none--0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none--0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none--1--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none--1--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none--1-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none--1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none--1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none--1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none-nginx-0--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none-nginx-0-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none-nginx-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none-nginx-1--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none-nginx-1-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none-nginx-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none-nginx_owo-0--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx_owo-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none-nginx_owo-0-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx_owo-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none-nginx_owo-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx_owo-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none-nginx_owo-1--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx_owo-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none-nginx_owo-1-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx_owo-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-none-nginx_owo-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx_owo-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www/public
WORKDIR /var/www/public

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp--0--none - 1]
FROM docker.io/library/php:8.2-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp--0--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm


COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp--0-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp--0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp--0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp--0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp--1--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp--1--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp--1-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp--1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp--1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp--1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp-nginx-0--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp-nginx-0-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp-nginx-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp-nginx-1--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp-nginx-1-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp-nginx-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp-nginx_owo-0--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx_owo-0--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp-nginx_owo-0-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx_owo-0-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp-nginx_owo-0-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx_owo-0-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp-nginx_owo-1--none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx_owo-1--php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp-nginx_owo-1-aaa-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx_owo-1-aaa-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate/8.2-thinkphp-nginx_owo-1-aaa_bbb-none - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx_owo-1-aaa_bbb-php_artisan_serve - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx owo && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync
RUN install-php-extensions aaa bbb

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.*)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php\$is_args\$args;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD php artisan serve

---

[TestTemplate_AcgFaka - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n location / {\n     if (!-e \$request_filename){\n         rewrite ^(.*)\$ /index.php?s=\$1 last; break;\n     }\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

USER www-data
RUN composer install --optimize-autoloader --no-dev

USER root

CMD nginx; php-fpm

---
