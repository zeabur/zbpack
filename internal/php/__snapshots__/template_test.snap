
[TestTemplate_AcgFaka - 1]
FROM docker.io/library/php:8.2-fpm

RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n location / {\n     if (!-e \$request_filename){\n         rewrite ^(.*)\$ /index.php?s=\$1 last; break;\n     }\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx,owo-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx,owo-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx,owo-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx,owo-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx,owo-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx,owo-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx,owo-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx,owo-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx,owo-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx,owo-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx,owo-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx,owo-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx,owo-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx,owo-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx,owo-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-thinkphp-nginx,owo-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-codeigniter-nginx-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx,owo-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-laravel-nginx-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-laravel-nginx,owo-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.1-none-nginx-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx,owo-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx,owo-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-thinkphp-nginx-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-none-nginx,owo-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-codeigniter-nginx-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-laravel-nginx-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/7-none-nginx-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx,owo-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-thinkphp-nginx,owo-1 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---

[TestTemplate/8.2-codeigniter-nginx,owo-0 - 1]
FROM docker.io/library/php:7-fpm

RUN apt-get update && apt-get install -y nginx,owo && rm -rf /var/lib/apt/lists/*
\
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && sync

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN rm /etc/nginx/sites-enabled/default
RUN echo "server {\n    listen 8080;\n    root /var/www/public;\n\n    add_header X-Frame-Options "SAMEORIGIN";\n    add_header X-Content-Type-Options "nosniff";\n\n    index index.php index.html;\n    charset utf-8;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    error_page 404 /index.php;\n\n    location ~ \.php\$ {\n        try_files \$uri =404;\n        fastcgi_split_path_info ^(.+\.php)(/.+)\$;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;\n        fastcgi_param PATH_INFO \$fastcgi_path_info;\n        fastcgi_buffering off;\n    }\n\n    location / {\n        try_files \$uri \$uri/ /index.php?\$query_string;\n        gzip_static on;\n }\n\n    location ~ /\.(?!well-known).* {\n        deny all;\n    }\n}\n" >> /etc/nginx/sites-enabled/default

RUN  echo '#!/bin/sh\n\
extensions=$(cat composer.json | jq -r ".require | to_entries[] | select(.key | startswith(\"ext-\")) | .key[4:]")\n\
for ext in $extensions; do\n\
    echo "Installing PHP extension: $ext"\n\
    docker-php-ext-install $ext\n\
done' > /usr/local/bin/install_php_extensions.sh \
    && chmod +x /usr/local/bin/install_php_extensions.sh \
    && /usr/local/bin/install_php_extensions.sh
RUN composer install --optimize-autoloader --no-dev

CMD nginx; php-fpm

---
